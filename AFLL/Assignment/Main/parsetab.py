
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY BOOLEAN CONST EQUAL ID LET NUMBER SEMICOLON STRING\n    declaration : variable_declaration\n                | type_declaration\n    \n    variable_declaration : LET ID optional_assignment SEMICOLON\n                        | CONST ID optional_assignment SEMICOLON\n    \n    optional_assignment : EQUAL expression\n                       | \n    \n    type_declaration : ID EQUAL expression SEMICOLON\n    \n    expression : NUMBER\n               | STRING\n               | BOOLEAN\n               | ID\n               | ARRAY\n    '
    
_lr_action_items = {'LET':([0,],[4,]),'CONST':([0,],[6,]),'ID':([0,4,6,8,11,],[5,7,9,12,12,]),'$end':([1,2,3,19,21,22,],[0,-1,-2,-3,-7,-4,]),'EQUAL':([5,7,9,],[8,11,11,]),'SEMICOLON':([7,9,10,12,13,14,15,16,17,18,20,],[-6,-6,19,-11,21,-8,-9,-10,-12,22,-5,]),'NUMBER':([8,11,],[14,14,]),'STRING':([8,11,],[15,15,]),'BOOLEAN':([8,11,],[16,16,]),'ARRAY':([8,11,],[17,17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([0,],[1,]),'variable_declaration':([0,],[2,]),'type_declaration':([0,],[3,]),'optional_assignment':([7,9,],[10,18,]),'expression':([8,11,],[13,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaration","S'",1,None,None,None),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','data_type.py',55),
  ('declaration -> type_declaration','declaration',1,'p_declaration','data_type.py',56),
  ('variable_declaration -> LET ID optional_assignment SEMICOLON','variable_declaration',4,'p_variable_declaration','data_type.py',61),
  ('variable_declaration -> CONST ID optional_assignment SEMICOLON','variable_declaration',4,'p_variable_declaration','data_type.py',62),
  ('optional_assignment -> EQUAL expression','optional_assignment',2,'p_optional_assignment','data_type.py',67),
  ('optional_assignment -> <empty>','optional_assignment',0,'p_optional_assignment','data_type.py',68),
  ('type_declaration -> ID EQUAL expression SEMICOLON','type_declaration',4,'p_type_declaration','data_type.py',73),
  ('expression -> NUMBER','expression',1,'p_expression','data_type.py',78),
  ('expression -> STRING','expression',1,'p_expression','data_type.py',79),
  ('expression -> BOOLEAN','expression',1,'p_expression','data_type.py',80),
  ('expression -> ID','expression',1,'p_expression','data_type.py',81),
  ('expression -> ARRAY','expression',1,'p_expression','data_type.py',82),
]
